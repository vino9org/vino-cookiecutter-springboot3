# this workflow will be triggered when
#
#  1. a pull request is raised
#  2. a push to 'develop' branch takes place
#  3. a release tag is created on the repo
#
# a maven build and test will be performed when the action is triggered. for 2 and 3, a container image will be created
# and pushed to Github Container Resitry. The following tagging logic will be applied:
#
#  for push to develop branch, develop-YYYYMMDD-HHMISS-SHA7. the tagging should be sortable by chronological order so that
#  it can be picked up by CD tools, e.g. FluxCD, for updating the deployment automatically
#
#  for push to main xxx (not yet implemented)
#  for new tag, the image tag will be same as the repository tag (not yet implemented)

on:
  push:
    branches:
      - develop
      - feature/*
      - bugfix/*

  pull_request:
    branches:
      - develop

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      tags: ${{ steps.envs.meta.tags }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"
          cache: maven

      - name: Build and test Java code
        run: mvn --batch-mode -s settings.xml clean test
        env:
          GITHUB_USER: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: set image metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,suffix=-{{sha}},event=tag
            type=raw,value=develop-{{date 'YYYYMMDD-HHmmss' tz='Asia/Singapore'}}-{{sha}},enable=${{ github.ref == format('refs/heads/{0}', 'develop') }}
          flavor: |
            latest=false
          labels: |
            org.opencontainers.image.source https://github.com/{{ ${{ github.repository }}

      - name: Login to github registry
        if: steps.meta.outputs.tags != ''
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push container image
        if: steps.tagging.outputs.tags != ''
        run: |
          mvn --batch-mode -s settings.xml jib:build -DskipTests \
            -Djib.to.image="ghcr.io/${{ github.repository }}" \
            -Djib.to.tags="${{ steps.meta.outputs.tags }}" \
            -Djib.container.labels="${{ steps.meta.outputs.labels }}"
        env:
          GITHUB_USER: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cleanup:
    needs: build
    runs-on: ubuntu-latest
    if: needs.build.outputs.tags != ''
    strategy:
      matrix:
        param: [vino-base-pom, vino-bom, vino-baselib, vino-svc-parent]
    steps:
      - uses: actions/delete-package-versions@v5
        if: needs.build.outputs.build_type == 'full'
        with:
          owner: vino9org
          package-name: net.vino9.vino.${{ matrix.param }}
          package-type: maven
          min-versions-to-keep: 5
          token: ${{ secrets.GITHUB_TOKEN }}
