# name: run pytest to test code generations

on:
  push:
    branches:
    - main
    - develop
    - feature/*

  pull_request:
    branches: [main, develop]

  workflow_dispatch:

jobs:
  python-test-and-build-image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Python and Maven dependencies
      uses: actions/cache@v2
      id: cache-dependencies
      with:
        path: |
          ~/.cache/pip
          ~/.m2/repository
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements-dev.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      if: steps.cache-dependencies.outputs.cache-hit != 'true' # Run only if there was no cache hit
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt

    - name: Linting
      if: success()
      run: |
        flake8 --count --show-source --statistics

    - name: Unit tests
      run: |
        git config --global init.defaultBranch main
        git config --global user.name "GitHub Actions Bot"
        git config --global user.email "bot@github.com"
        pytest -v
      env:
        SKIP_MAVEN_TEST: "N"
        GITHUB_USER: ${{ github.actor }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
