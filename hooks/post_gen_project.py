import json
import os
import shlex
import subprocess

context = json.loads(
    """
{{ cookiecutter | jsonify }}
"""
)


def delete_empty_dirs(directory):
    for folder, subfolders, files in list(os.walk(directory))[::-1]:
        if not os.listdir(folder):
            try:
                os.rmdir(folder)
                # print(f"Deleted empty directory: {folder}")
            except OSError as e:
                print(f"Error deleting directory {folder}: {e}")


def delete_unused_files():
    print("post generation hook......")
    with open("to_delete.txt") as f:
        for path in f.readlines():
            path = path.strip()
            if path and os.path.exists(path):
                # print(f"Deleting unused file {path}")
                os.unlink(path)
    delete_empty_dirs(os.getcwd())
    os.unlink("to_delete.txt")


def create_git_repo():
    # create a git repo, everybody needs this, right?
    subprocess.call(shlex.split("git init"))
    subprocess.call(shlex.split("git checkout -b develop"))
    subprocess.call(shlex.split("git add .gitignore"))
    subprocess.call(shlex.split("git add *"))
    subprocess.call(shlex.split("git add .mvn"))
    subprocess.call(shlex.split("git add .github"))
    subprocess.call(
        shlex.split("git commit -m 'generated by cookiecutter'"),
        stdout=subprocess.DEVNULL,
    )


def print_help():
    # print some help messages
    home = os.path.expanduser("~")
    basename = os.path.basename(os.getcwd())
    relpath = os.path.relpath(os.getcwd(), home)
    print(
        f"""
    # To test if the project is generated successfully

    cd ~/{relpath}
    ./mvnw dependency:resolve
    ./mvnw dependency:resolve-plugins
    ./mvnw clean test

    # to put this repo on github
    # if you use github action, make sure to set acction permission to Read & Write

    gh repo create {basename} --public --source=.
    git push -u origin develop

    """
    )


delete_unused_files()
create_git_repo()
print_help()
